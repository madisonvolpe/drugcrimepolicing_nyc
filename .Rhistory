count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
names(final_arrest_counts_by_zip)[2] <- 'no.drug.arrests.13.18'
#also note no arrests were made in 10311, 10313 - this is bc these areas are not very populated
## get ems counts
# emsorig   <- read.csv("data/ems_original.csv")
#
# emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#                   10312, 10301, 10304, 10305, 10314, 10311, 10313))
#
# !c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#    10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
names(demo)
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demo <- filter(demo, year == 2017 ) # for lunp sum estimates use 2017
View(demo)
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10313))
demo <- filter(demo, year == 2017 ) # for lunp sum estimates use 2017
View(demo)
29862 + 16424 + 9119 + 20 + 2312 + 0 +126 + 1861
16424 + 9119 + 20 + 2312 + 0 +126 + 1861
29862 + 9589
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10313))
demo <- filter(demo, year == 2017 ) # for lunp sum estimates use 2017
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite)
View(demofinal)
View(demofinal)
# join demographics with data
zip_model_dataset <- left_join(zip_model_dataset, demofinal, by = 'zip')
View(zip_model_dataset)
# add in extra drug activity dataset
zip.extra.drug <- read.csv("data/ZipCodeDrugStats.csv")
getwd()
# add in extra drug activity dataset
zip.extra.drug <- read.csv("data/ZipCodeDrugStats .csv")
# add in extra drug activity dataset
zip.extra.drug <- read.csv("data/ZipCodeDrugStats.csv")
View(zip.extra.drug)
names(zip.extra.drug)[1] <- 'zip'
names(zip)
names(zip.extra.drug)
zip.extra.drug <- select(zip.extra.drug, zip, Total.Naxolone.Saves, Overdose.Death.Total)
View(zip.extra.drug)
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
### DATASET ONE ###
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
names(final_arrest_counts_by_zip)[2] <- 'no.drug.arrests.13.18'
#also note no arrests were made in 10311, 10313 - this is bc these areas are not very populated
## get ems counts
# emsorig   <- read.csv("data/ems_original.csv")
#
# emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#                   10312, 10301, 10304, 10305, 10314, 10311, 10313))
#
# !c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#    10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
# add demographics
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10313))
demo <- filter(demo, year == 2017 ) # for lump sum estimates use (ACS 2017 5 year estimates)
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite)
# join demographics with data
zip_model_dataset <- left_join(zip_model_dataset, demofinal, by = 'zip')
write_csv(zip_model_dataset, "data/ModelDatasets/zipcodeModel1.csv")
# add in extra drug activity dataset
zip.extra.drug <- read.csv("data/ZipCodeDrugStats.csv")
names(zip.extra.drug)[1] <- 'zip'
zip.extra.drug <- select(zip.extra.drug, zip, Total.Naxolone.Saves, Overdose.Death.Total)
zip_model_dataset2 <- left_join(zip_model_dataset, zip.extra.drug, by = 'zip')
View(zip_model_dataset2)
write_csv(zip_model_dataset2, "data/ModelDatasets/zipcodeModel3.csv")
rm(list=ls())
mod1dat <- read.csv("data/ModelDatasets/zipcodeModel1.csv")
mod1dat$zip <- factor(mod1dat$zip)
View(mod1dat)
mod1dat$zip <- factor(mod1dat$zip)
View(mod1dat)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
names(mod1)
names(mod1dat)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
exp(2.07)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
y.hat <- predict(mod1, type = 'response')
u <- resid(mod1)
sigma <- arm::sigma.hat(mod1)
arm::residual.plot(y.hat,u, sigma)
knitr::opts_chunk$set(echo = TRUE)
mod1dat <- read.csv("data/ModelDatasets/zipcodeModel1.csv")
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
y.hat <- predict(mod1, type = 'response')
u <- resid(mod1)
sigma <- arm::sigma.hat(mod1)
arm::residual.plot(y.hat,u, sigma)
names(mod1)
names(mod1dat)
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over1),family = quasipoisson ,data = mod1dat)
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod3dat <- read.csv("data/ModelDatasets/zipcodeModel3.csv")
View(mod3dat)
names(mod3dat)
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
mod3 <- glm(formula = no.drug.arrests.13.18 ~ proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
arm::display(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
mod3dat <- read.csv("data/ModelDatasets/zipcodeModel3.csv")
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
### DATASET ONE ###
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
### DATASET ONE ###
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
names(final_arrest_counts_by_zip)[2] <- 'no.drug.arrests.13.18'
#also note no arrests were made in 10311, 10313 - this is bc these areas are not very populated
## get ems counts
# emsorig   <- read.csv("data/ems_original.csv")
#
# emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#                   10312, 10301, 10304, 10305, 10314, 10311, 10313))
#
# !c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#    10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
# add demographics
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10313))
demo <- filter(demo, year == 2017 ) # for lump sum estimates use (ACS 2017 5 year estimates)
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite)
# join demographics with data
zip_model_dataset <- left_join(zip_model_dataset, demofinal, by = 'zip')
# add in extra drug activity dataset
zip.extra.drug <- read.csv("data/ZipCodeDrugStats.csv")
names(zip.extra.drug)[1] <- 'zip'
zip.extra.drug <- select(zip.extra.drug, zip, Total.Naxolone.Saves, Overdose.Death.Total)
zip_model_dataset2 <- left_join(zip_model_dataset, zip.extra.drug, by = 'zip')
# write to csv - this corresponds to our 3rd model
#write_csv(zip_model_dataset2, "data/ModelDatasets/zipcodeModel3.csv")
rm(list=ls())
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs), year = drugs$year)
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip, year) %>%
count() %>%
select(zip,year,n)
intresult <- intresult %>%
filter(year, year %in% c(2014, 2015, 2016, 2017))
final_arrest_counts_by_zip_year <- as.data.frame(intresult)[,-4] # lost some observations (4) but that is okay
final_arrest_counts_by_zip_year$zip <- as.numeric(as.character(final_arrest_counts_by_zip_year$zip))
names(final_arrest_counts_by_zip_year)[3] <- 'no.drug.arrests.14.17'
final_ems_counts_by_zip_year <- ems %>%
group_by(zipcode,year) %>%
count() %>%
select(zipcode,year,n)
final_ems_counts_by_zip_year <- filter(final_ems_counts_by_zip_year,
year %in% c(2014,2015,2016,2017))
names(final_ems_counts_by_zip_year)[1] <- 'zip'
names(final_ems_counts_by_zip_year)[3] <- 'no.ems.calls.14.17'
# join arrests and ems counts
zip_model_dataset_year <- left_join(final_arrest_counts_by_zip_year, final_ems_counts_by_zip_year, by = c('zip','year'))
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip_year <- ems %>%
group_by(zipcode,year) %>%
count() %>%
select(zipcode,year,n)
final_ems_counts_by_zip_year <- filter(final_ems_counts_by_zip_year,
year %in% c(2014,2015,2016,2017))
names(final_ems_counts_by_zip_year)[1] <- 'zip'
names(final_ems_counts_by_zip_year)[3] <- 'no.ems.calls.14.17'
# join arrests and ems counts
zip_model_dataset_year <- left_join(final_arrest_counts_by_zip_year, final_ems_counts_by_zip_year, by = c('zip','year
))
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip_year <- ems %>%
group_by(zipcode,year) %>%
count() %>%
select(zipcode,year,n)
final_ems_counts_by_zip_year <- filter(final_ems_counts_by_zip_year,
year %in% c(2014,2015,2016,2017))
names(final_ems_counts_by_zip_year)[1] <- 'zip'
names(final_ems_counts_by_zip_year)[3] <- 'no.ems.calls.14.17'
# join arrests and ems counts
zip_model_dataset_year <- left_join(final_arrest_counts_by_zip_year, final_ems_counts_by_zip_year, by = c('zip','year'))
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
View(demo)
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
names(demo)
View(demo)
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite,year)
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone,year) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite,year)
View(demofinal)
unique(zip_model_dataset_year$zip)
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone,year) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite,year)
View(demofinal)
zip_model_dataset_year$year
# join demographics with data
zip_model_dataset_year <- left_join(zip_model_dataset_year, demofinal, by = c('zip','year'))
View(zip_model_dataset_year)
### DATASET 2 ###
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs), year = drugs$year)
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip, year) %>%
count() %>%
select(zip,year,n)
intresult <- intresult %>%
filter(year, year %in% c(2014, 2015, 2016, 2017))
final_arrest_counts_by_zip_year <- as.data.frame(intresult)[,-4] # lost some observations (4) but that is okay
final_arrest_counts_by_zip_year$zip <- as.numeric(as.character(final_arrest_counts_by_zip_year$zip))
names(final_arrest_counts_by_zip_year)[3] <- 'no.drug.arrests.14.17'
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip_year <- ems %>%
group_by(zipcode,year) %>%
count() %>%
select(zipcode,year,n)
final_ems_counts_by_zip_year <- filter(final_ems_counts_by_zip_year,
year %in% c(2014,2015,2016,2017))
names(final_ems_counts_by_zip_year)[1] <- 'zip'
names(final_ems_counts_by_zip_year)[3] <- 'no.ems.calls.14.17'
# join arrests and ems counts
zip_model_dataset_year <- left_join(final_arrest_counts_by_zip_year, final_ems_counts_by_zip_year, by = c('zip','year'))
# add demographics
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone,year) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite,year)
# join demographics with data
zip_model_dataset_year <- left_join(zip_model_dataset_year, demofinal, by = c('zip','year'))
write_csv(zip_model_dataset_year, "data/ModelDatasets/zipcodeModel2.csv")
View(zip_model_dataset_year)
rm(list=ls())
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
mod1dat <- read.csv("data/ModelDatasets/zipcodeModel1.csv")
getwd()
mod1dat <- read.csv("data/ModelDatasets/zipcodeModel1.csv")
knitr::opts_chunk$set(echo = TRUE)
mod1dat <- read.csv("~data/ModelDatasets/zipcodeModel1.csv")
mod1dat <- read.csv("./data/ModelDatasets/zipcodeModel1.csv")
library(readr)
zipcodeModel1 <- read_csv("data/ModelDatasets/zipcodeModel1.csv")
View(zipcodeModel1)
rm(list=ls())
mod1dat <- read.csv("./data/ModelDatasets/zipcodeModel1.csv")
