cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
y.hat <- predict(mod1, type = 'response')
u <- resid(mod1)
sigma <- arm::sigma.hat(mod1)
arm::residual.plot(y.hat,u, sigma)
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
exp(2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
y.hat <- predict(mod2, type = 'response')
u <- resid(mod2)
sigma <- arm::sigma.hat(mod2)
arm::residual.plot(y.hat,u, sigma)
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
arm::display(mod2)
summary(mod2quasi)
rm(list=ls())
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
names(mod2dat)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over.18),
family = poisson, data = mod2dat)
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
exp(2.13)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
y.hat <- predict(mod2, type = 'response')
u <- resid(mod2)
sigma <- arm::sigma.hat(mod2)
names(mod2dat)
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
arm::display(mod2)
summary(mod2quasi)
rm(list=ls())
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
View(mod3dat)
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
summary(mod3)
View(mod3dat)
plot(mod3dat$proportionNonWhite, mod3dat$Overdose.Death.Total)
plot(mod3dat$proportionNonWhite, mod3dat$Total.Naxolone.Saves)
plot(mod3dat$proportionNonWhite, mod3dat$no.drug.arrests.13.18)
plot(mod3dat$proportionNonWhite, mod3dat$no.ems.calls.13.18)
knitr::opts_chunk$set(echo = TRUE)
library(here)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
y.hat <- predict(mod1, type = 'response')
u <- resid(mod1)
sigma <- arm::sigma.hat(mod1)
arm::residual.plot(y.hat,u, sigma)
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
y.hat <- predict(mod2, type = 'response')
u <- resid(mod2)
sigma <- arm::sigma.hat(mod2)
arm::residual.plot(y.hat,u, sigma)
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod1quasi)
exp(1.35)
1.35*100
log(1.35
log(1.35)
exp(.40)
rm(list=ls())
# read in zip shapefile
zip <- readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs), year = drugs$year)
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# read in zip shapefile
zip <- readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
table(drugs$pd_desc)
table(drugs$perp_race)
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs), year = drugs$year,
race = drugs$perp_race)
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip <- readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs), year = drugs$year,
race = drugs$perp_race)
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
View(intersection)
intresult <- intersection %>%
group_by(zip, year, race) %>%
count() %>%
select(zip,year,n)
View(intresult)
intresult <- intersection %>%
group_by(zip, race) %>%
count() %>%
select(zip,race,n)
View(intresult)
View(intresult)
intresult <- intresult %>%
filter(race, race %in% c('BLACK', 'HISPANIC', 'WHITE'))
str(intresult)
intresult <- intersection %>%
group_by(zip, race) %>%
count() %>%
select(zip,race,n)
View(intresult)
intresult <- intresult[1:3,]
intersection <- st_intersection(x = zip, y = points)
intresult <- intersection %>%
group_by(zip, race) %>%
count() %>%
select(zip,race,n)
intresult <- intresult[,1:3]
View(intresult)
intresult <- as.data.frame(intresult[,1:3])
View(intresult)
intresult <- as.data.frame(intresult[,-4])
View(intresult)
intresult$race <- data.frame(intresult$race)
intresult <- intresult %>%
filter(race, race %in% c('BLACK', 'HISPANIC', 'WHITE'))
intresult <- intersection %>%
group_by(zip, race) %>%
count() %>%
select(zip,race,n)
intresult <- as.data.frame(intresult[,-4])
intresult$race <- as.character(intresult$race)
intresult <- intresult %>%
filter(race, race %in% c('BLACK', 'HISPANIC', 'WHITE'))
intresult <- intresult %>%
filter(race %in% c('BLACK', 'HISPANIC', 'WHITE'))
View(intresult)
intresult <- intersection %>%
group_by(zip, race) %>%
count() %>%
select(zip,race,n)
intresult <- as.data.frame(intresult[,-4])
intresult$race <- as.character(intresult$race)
intresult <- intresult %>%
filter(race %in% c('BLACK', 'HISPANIC', 'WHITE'))
intresult <- as.data.frame(intresult[,-4])
intresult$race <- as.character(intresult$race)
intresult <- intresult %>%
filter(race %in% c('BLACK', 'HISPANIC', 'WHITE'))
View(intresult)
names(intresult)[3]
names(intresult)[3] <- 'no.drug.arrests.13.18'
View(intresult)
# ems calls
ems <- read.csv("data/emsdrugs.csv")
names(ems)
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_multilevel_race <- left_join(intresult, final_ems_counts_by_zip, by = 'zip')
str(intresult$zip)
intresult$zip <- as.numeric(as.character(intresult$zip))
# join arrests and ems counts
zip_model_multilevel_race <- left_join(intresult, final_ems_counts_by_zip, by = 'zip')
View(zip_model_multilevel_race)
demo <- read.csv("data/ACS_Demo/ACS.14_17.csv")
demo <- filter(demo, zip %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10313))
demo <- filter(demo, year == 2017 ) # for lump sum estimates use (ACS 2017 5 year estimates)
demofinal <- demo %>%
select(zip, Total.Population, Total.Population.Over18, White.Alone) %>%
mutate(proportionWhite = (White.Alone/Total.Population),
proportionNonWhite = ((Total.Population-White.Alone)/
Total.Population))%>%
select(zip, Total.Population, Total.Population.Over18, proportionWhite, proportionNonWhite)
# join demographics with data
zip_model_multilevel_race <- left_join(zip_model_multilevel_race, demofinal, by = 'zip')
View(zip_model_multilevel_race)
library(arm)
?arm
rm(list=ls())
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/sqrt(fitted(mod1))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/sqrt(fitted(mod1)))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/sqrt(fitted(mod1)))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/sqrt(mod1dat$no.drug.arrests.13.18))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
sr
pv
r
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/sqrt(mod1dat$no.drug.arrests.13.18))
sr
rstandard(mod1)
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)/rstandard(mod1))
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(here)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
par(mfrow=c(1,2))
pv <- fitted(mod1)
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1))
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- (r/rstandard(mod1))
sr <- rstandard(mod1)#standardized residual
sr
par(mfrow=c(1,2))
pv <- fitted(mod1) #predicted values
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod1)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
par(mfrow=c(1,2))
pv <- fitted(mod3) #predicted values
r <- (mod3dat$no.drug.arrests.13.18 - fitted(mod3)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod3)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod1) #predicted values
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod1)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod2dat$zip <- factor(mod2dat$zip)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
library(here)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
summary(mod2qyasi)
summary(mod2quasi)
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod3) #predicted values
r <- (mod3dat$no.drug.arrests.13.18 - fitted(mod3)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod3)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
View(mod3)
View(mod3dat)
