abline(h=0)
sr <- rstandard(mod3)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
stargazer::stargazer(mod1quasi, mod2quasi, mod3quasi)
stargazer::stargazer(mod1quasi, mod2quasi, mod3quasi)
stargazer::stargazer(mod1quasi, mod2quasi, mod3quasi, title = "Poisson Regression Results", no.space = TRUE)
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(here)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod1) #predicted values
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod1)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod3) #predicted values
r <- (mod3dat$no.drug.arrests.13.18 - fitted(mod3)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod3)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
mod1dat$zip <- factor(mod1dat$zip)
names(mod1dat)
plot(no.drug.arrests.13.18~proportionNonWhite, mod1dat, log="no.drug.arrests.13.18")
plot(no.drug.arrests.13.18~proportionNonWhite, mod1dat, log="y")
with(mod1dat, lines(lowess(no.drug.arrests.13.18~proportionNonWhite)))
knitr::opts_chunk$set(echo = TRUE)
library(here)
mod1dat <- read.csv(here::here("data/ModelDatasets", "zipcodeModel1.csv"))
#plot(no.drug.arrests.13.18~proportionNonWhite, mod1dat, log="y")
#with(mod1dat, lines(lowess(no.drug.arrests.13.18~proportionNonWhite)))
mod1dat$zip <- factor(mod1dat$zip)
mod1 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset = log(Total.Population.Over18),family = poisson ,data = mod1dat)
arm::display(mod1)
summary(mod1)
plot(mod1dat)
plot(mod1)
yhat <- predict(mod1, type = 'response')
z <- (mod1dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-3), "\n")
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod1) #predicted values
r <- (mod1dat$no.drug.arrests.13.18 - fitted(mod1)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod1)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod1quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite,
offset  = log(Total.Population.Over18),family = quasipoisson ,data = mod1dat)
summary(mod1quasi)
plot(mod1quasi)
library(gmodels)
#plot(mod1quasi)
ci(mod1quasi)
summary(mod1quasi)
exp(2.07)
rm(list=ls())
mod2dat <- read.csv(here("data/ModelDatasets", 'zipcodeModel2.csv'))
mod2dat$zip <- factor(mod2dat$zip)
View(mod2dat)
plot(no.drug.arrests.13.18~proportionNonWhite, mod2dat, log="y")
plot(no.drug.arrests.14.17~proportionNonWhite, mod2dat, log="y")
with(mod2dat, lines(lowess(no.drug.arrests.14.17~proportionNonWhite)))
mod2 <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset = log(Total.Population.Over18),
family = poisson, data = mod2dat)
arm::display(mod2)
summary(mod2)
yhat <- predict(mod2, type = 'response')
z <- (mod2dat$no.drug.arrests.14.17 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(48-3), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 48-3), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod2) #predicted values
r <- (mod2dat$no.drug.arrests.14.17- fitted(mod2)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod2)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod2quasi <- glm(formula = no.drug.arrests.14.17 ~ no.ems.calls.14.17 + proportionNonWhite, offset =
log(Total.Population.Over18),family = quasipoisson, data = mod2dat)
arm::display(mod2quasi)
plot(mod2quasi)
ci(mod2quasi)
summary(mod2quasi)
exp(no.ems.calls.14.17 )
exp( 0.0005675)
exp(0.0005675)
summary(mod2quasi)
exp(0.0005675)
exp(2.1262954)
rm(list=ls())
mod3dat <- read.csv(here('data/ModelDatasets','zipcodeModel3.csv'))
mod3 <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = poisson, data = mod3dat)
arm::display(mod3)
summary(mod3)
yhat <- predict(mod3, type = 'response')
z <- (mod3dat$no.drug.arrests.13.18 - yhat) / sqrt(yhat)
cat('overdispersion ratio is', sum(z^2)/(12-5), "\n") #n -k
cat('p-value of overdispersion test is', pchisq(sum(z^2), 12-5), "\n")
par(mfrow=c(1,2))
pv <- fitted(mod3) #predicted values
r <- (mod3dat$no.drug.arrests.13.18 - fitted(mod3)) #residuals
plot(pv, r, pch=20, ylab="raw residuals", xlab="predicted value")
abline(h=0)
sr <- rstandard(mod3)#standardized residual
plot(pv, sr, pch=20, ylab="standardized residuals", xlab="predicted value")
abline(h=c(-2,0,2),lty=c(2,1,2))
mod3quasi <- glm(formula = no.drug.arrests.13.18 ~ no.ems.calls.13.18 + proportionNonWhite + Total.Naxolone.Saves +
Overdose.Death.Total, offset = log(Total.Population.Over18),family = quasipoisson, data = mod3dat)
arm::display(mod3quasi)
summary(mod3quasi)
plot(mod3quasi)
ci(mod3quasi)
summary(mod1quasi)
summary(mod3quasi)
exp(-0.0071610)
exp(1.3203276)
rm(list=ls())
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf) # for shapefiles
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
## Motivation One: Race Map of zipcodes
# read in Census Tract shapefile
shp <- readOGR(dsn = "shapefiles/ZipCode")
shp@data$id = shp@data$zcta
shp.points = fortify(shp, region="id")
shp.df = plyr::join(shp.points, shp@data, by="id")
# filter shp for SI
shp.df <- filter(shp.df, zcta %in% c(10302,10303,10310,10306,10307,10308,10309,10312,10301,10304,10305,10314))
shp.df$zcta <- as.numeric(as.character(shp.df$zcta))
# load in model dataset
zip.results <- read.csv("./data/ModelDatasets/zipcodeModel3.csv")
shp.df <- left_join(shp.df, zip.results, by = c('zcta'='zip'))
# racial composition map
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = proportionNonWhite)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "Racial Makeup of Staten Island",
subtitle = "The proportion of non-white people in each zip code",
caption = "Source: ACS 2017",
fill = NULL)
# naxolone saves by zip code
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = Total.Naxolone.Saves)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "The Drug Epidemic on Staten Island ",
subtitle = "Total naxolone saves (2016-2018) in each zip code",
caption = "Source: Staten Island Drug Prevention Portal",
fill = NULL)
# fatal overdoses by zip code
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = Overdose.Death.Total)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "The Drug Epidemic on Staten Island ",
subtitle = "Total overdose deaths (2016-2018) in each zip code",
caption = "Source: Staten Island Drug Prevention Portal",
fill = NULL)
# examining the nypd arrest dataset to explain in pres
arrests <- read.csv("./data/si_drugs_mod_arrests.csv")
arrests <- arrests %>%
mutate(cat = case_when(
grepl("MARIJUANA, POSSESSION", pd_desc) ~ 'Marijuana Possession',
grepl("MARIJUANA, SALE", pd_desc) ~ 'Marijuana Sale',
grepl("CONTROLLED SUBSTANCE,POSSESS", pd_desc) |
grepl("CONTROLLED SUBSTANCE, POSSESSION", pd_desc) |
grepl("CONTROLLED SUBSTANCE, POSSESSI", pd_desc)~ "Controlled Substance Possession",
grepl("CONTROLLED SUBSTANCE,SALE", pd_desc) |
grepl("CONTROLLED SUBSTANCE, SALE", pd_desc) |
grepl("CONTROLLED SUBSTANCE,INTENT TO SELL", pd_desc) |
grepl("CONTROLLED SUBSTANCE, INTENT TO SELL", pd_desc) ~ "Controlled Substance Sell",
!grepl("MARIJUANA", pd_desc) | !grepl("CONTROLLED SUBSTANCE", pd_desc) ~ 'Misc'
))
arrests %>%
filter(cat != 'Misc') %>%
group_by(pd_desc, cat) %>%
summarise(n = n()) %>%
ggplot(aes(x = pd_desc, y = n)) +
geom_bar(stat = 'identity') +
facet_wrap(~cat, scales = 'free') +
coord_flip() +
labs(title = "Drug Arrests on Staten Island",
subtitle = "Distribution of Categories",
caption = "Source: NYC Open Data",
fill = NULL)
# Examining the EMS dispatch data to explain in pres
ems2 <- read.csv("./data/emsdrugs.csv")
# EDA for Final Presentation
## Arrests v. by Racial Composition
zip.results <- zip.results %>%
mutate(MajorityNonWhite = ifelse(proportionNonWhite > .50, 'Yes', 'No'))
ggplot(zip.results, aes(x = no.ems.calls.13.18, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'EMS Calls 2013 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, 2017 ACS",
fill = NULL)
ggplot(zip.results, aes(x = Total.Naxolone.Saves, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'Naxolone Saves 2016 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
ggplot(zip.results, aes(x = Overdose.Death.Total, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'Overdose Deaths 2016 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
View(zip.results)
View(arrests)
View(arrests)
mod2 <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
View(mod2)
ziparrestsbyyear <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
rm(mod2)
rm(ziparrestsbyyear)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
View(zip.arrest.by.year)
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
View(zip.arrest.by.year)
unique(zip.arrest.by.year$zip)
nax.by.year <- data.frame(zip = c(10301,10302,10303,10304,10305,10306,10307,10308,10309, 10310,
10312, 10314),
year = c(2016,2017))
View(nax.by.year)
View(nax.by.year)
rm(list=ls())
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf) # for shapefiles
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
## Motivation One: Race Map of zipcodes
# read in Census Tract shapefile
shp <- readOGR(dsn = "shapefiles/ZipCode")
shp@data$id = shp@data$zcta
shp.points = fortify(shp, region="id")
shp.df = plyr::join(shp.points, shp@data, by="id")
# filter shp for SI
shp.df <- filter(shp.df, zcta %in% c(10302,10303,10310,10306,10307,10308,10309,10312,10301,10304,10305,10314))
shp.df$zcta <- as.numeric(as.character(shp.df$zcta))
# load in model dataset
zip.results <- read.csv("./data/ModelDatasets/zipcodeModel3.csv")
shp.df <- left_join(shp.df, zip.results, by = c('zcta'='zip'))
# racial composition map
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = proportionNonWhite)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "Racial Makeup of Staten Island",
subtitle = "The proportion of non-white people in each zip code",
caption = "Source: ACS 2017",
fill = NULL)
# naxolone saves by zip code
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = Total.Naxolone.Saves)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "The Drug Epidemic on Staten Island ",
subtitle = "Total naxolone saves (2016-2018) in each zip code",
caption = "Source: Staten Island Drug Prevention Portal",
fill = NULL)
# fatal overdoses by zip code
ggplot(shp.df) +
aes(long,lat,group=group) +
geom_polygon(aes(fill = Overdose.Death.Total)) +
scale_fill_gradient(low = "black", high = "red") +
geom_path(color="white") +
theme_bw() +
labs(title = "The Drug Epidemic on Staten Island ",
subtitle = "Total overdose deaths (2016-2018) in each zip code",
caption = "Source: Staten Island Drug Prevention Portal",
fill = NULL)
# examining the nypd arrest dataset to explain in pres
arrests <- read.csv("./data/si_drugs_mod_arrests.csv")
arrests <- arrests %>%
mutate(cat = case_when(
grepl("MARIJUANA, POSSESSION", pd_desc) ~ 'Marijuana Possession',
grepl("MARIJUANA, SALE", pd_desc) ~ 'Marijuana Sale',
grepl("CONTROLLED SUBSTANCE,POSSESS", pd_desc) |
grepl("CONTROLLED SUBSTANCE, POSSESSION", pd_desc) |
grepl("CONTROLLED SUBSTANCE, POSSESSI", pd_desc)~ "Controlled Substance Possession",
grepl("CONTROLLED SUBSTANCE,SALE", pd_desc) |
grepl("CONTROLLED SUBSTANCE, SALE", pd_desc) |
grepl("CONTROLLED SUBSTANCE,INTENT TO SELL", pd_desc) |
grepl("CONTROLLED SUBSTANCE, INTENT TO SELL", pd_desc) ~ "Controlled Substance Sell",
!grepl("MARIJUANA", pd_desc) | !grepl("CONTROLLED SUBSTANCE", pd_desc) ~ 'Misc'
))
arrests %>%
filter(cat != 'Misc') %>%
group_by(pd_desc, cat) %>%
summarise(n = n()) %>%
ggplot(aes(x = pd_desc, y = n)) +
geom_bar(stat = 'identity') +
facet_wrap(~cat, scales = 'free') +
coord_flip() +
labs(title = "Drug Arrests on Staten Island",
subtitle = "Distribution of Categories",
caption = "Source: NYC Open Data",
fill = NULL)
# Examining the EMS dispatch data to explain in pres
ems2 <- read.csv("./data/emsdrugs.csv")
# EDA for Final Presentation
## Arrests v. by Racial Composition
zip.results <- zip.results %>%
mutate(MajorityNonWhite = ifelse(proportionNonWhite > .50, 'Yes', 'No'))
ggplot(zip.results, aes(x = no.ems.calls.13.18, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'EMS Calls 2013 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, 2017 ACS",
fill = NULL)
ggplot(zip.results, aes(x = Total.Naxolone.Saves, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'Naxolone Saves 2016 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
ggplot(zip.results, aes(x = Overdose.Death.Total, y = no.drug.arrests.13.18, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Within each zip code",
x = 'Overdose Deaths 2016 - 2018',
y = 'Drug Arrests 2013 - 2018',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
## Arrests by Racial Composition  - But individual years to add more points to the graph
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
View(zip.arrest.by.year)
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year)
View(zip.arrest.by.year)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
View(zip.arrest.by.year)
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year, no.drug.arrests.14.17)
View(zip.arrest.by.year)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
names(zip.arrest.by.year)
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year, no.drug.arrests.14.17,proportionNonWhite)
zip.arrest.by.year$naxsaves <- c(72,98,17,15,16,24,46,58,55,63,59,77,18,26,15,19,25,27,20,25,26,54,37,54)
names(zip.arrest.by.year)
zip.arrest.by.year$MajorityNonWhite <- ifelse(proportionNonWhite > .50, 'Yes', 'No')
zip.arrest.by.year$MajorityNonWhite <- ifelse(zip.arrest.by.year$proportionNonWhite > .50, 'Yes', 'No')
ggplot(zip.results, aes(x = naxsaves, y = no.drug.arrests.14.17, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Not Aggregated",
x = 'Naxolone Saves 2016 - 2017',
y = 'Drug Arrests 2016 - 2017',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year, no.drug.arrests.14.17,proportionNonWhite)
zip.arrest.by.year$naxsaves <- c(72,98,17,15,16,24,46,58,55,63,59,77,18,26,15,19,25,27,20,25,26,54,37,54)
zip.arrest.by.year$MajorityNonWhite <- ifelse(zip.arrest.by.year$proportionNonWhite > .50, 'Yes', 'No')
ggplot(zip.arrest.by.year, aes(x = naxsaves, y = no.drug.arrests.14.17, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Not Aggregated",
x = 'Naxolone Saves 2016 - 2017',
y = 'Drug Arrests 2016 - 2017',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year, no.drug.arrests.14.17,proportionNonWhite)
zip.arrest.by.year$naxsaves <- c(72,98,17,15,16,24,46,58,55,63,59,77,18,26,15,19,25,27,20,25,26,54,37,54)
zip.arrest.by.year <- read.csv("./data/ModelDatasets/zipcodeModel2.csv")
zip.arrest.by.year <- filter(zip.arrest.by.year, year %in% c(2016,2017))
zip.arrest.by.year <- select(zip.arrest.by.year, zip, year, no.drug.arrests.14.17,proportionNonWhite)
zip.arrest.by.year$naxsaves <- c(72,98,17,15,16,24,46,58,55,63,59,77,18,26,15,19,25,27,20,25,26,54,37,54)
zip.arrest.by.year$overdose <- c(6,8,7,13,4,2,7,5,11,14,14,21,4,4,4,6,5,10,5,7,9,6,16,13)
zip.arrest.by.year$MajorityNonWhite <- ifelse(zip.arrest.by.year$proportionNonWhite > .50, 'Yes', 'No')
ggplot(zip.arrest.by.year, aes(x = overdose, y = no.drug.arrests.14.17, color=MajorityNonWhite)) +
geom_point() +
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Not Aggregated",
x = 'Overdose Deaths 2016 - 2017',
y = 'Drug Arrests 2016 - 2017',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
ggplot(zip.arrest.by.year, aes(x = overdose, y = no.drug.arrests.14.17, color=MajorityNonWhite)) +
geom_point() +
geom_vline(xintercept = 8)+
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Not Aggregated",
x = 'Overdose Deaths 2016 - 2017',
y = 'Drug Arrests 2016 - 2017',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
ggplot(zip.arrest.by.year, aes(x = overdose, y = no.drug.arrests.14.17, color=MajorityNonWhite)) +
geom_point() +
geom_vline(xintercept = 8.5)+
labs(title = "Drug Arrests v. Drug Activity",
subtitle = "Not Aggregated",
x = 'Overdose Deaths 2016 - 2017',
y = 'Drug Arrests 2016 - 2017',
caption = "Source: NYC Open Data, SI Drug Prevention Dashboard",
fill = NULL)
