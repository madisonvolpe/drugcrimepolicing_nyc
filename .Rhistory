head(ems$dispatch_response_seconds_qy,100)
# VALID_INCIDENT_RSPNS_TIME_INDC / INCIDENT_RESPONSE_SECONDS_QY
unique(ems$valid_incident_rspns_time_indc)
str(ems$incident_response_seconds_qy)
# INCIDENT_TRAVEL_TM_SECONDS_QY
str(ems$incident_travel_tm_seconds_qy)
# HELD_INDICATOR
str(ems$held_indicator)
unique(ems$incident_disposition_code)
# atom
unique(ems$atom)
table(ems$atom)
# incident dispatch area
unique(ems$incident_dispatch_area)
unique(ems$borough)
table(ems$incident_dispatch_area)
# found good webiste that breaks it down to precincts / fire battalions
# S1 - links to 120 precinct
# S2 - links to 122 precinct
# S3 - links to 123 precinct
table(ems$incident_dispatch_area)
table(ems$policeprecinct)
ems <- filter(ems, incident_dispatch_area %in% c("S1", "S2", "S3"))
# found good webiste that breaks it down to precincts / fire battalions
# S1 - links to 120 precinct
# S2 - links to 122 precinct
# S3 - links to 123 precinct
table(ems$incident_dispatch_area) # some fall out of SI we should filter these out
table(ems$policeprecinct) # some fall out
str(ems$policeprecinct)
ems <- filter(ems, policeprecinct %in% c(120,121,122,123))
table(ems$policeprecinct) # some fall out
str(ems)
# revisit incident disposition code
unique(ems$incident_disposition_code)
unique(ems$incident_disposition_code)
str(ems$incident_disposition_code)
ems <- filter(ems, ems$incident_disposition_code != 87)
names(ems)
ems.drugs <- filter(ems, initial_call_type %in% c("DRUG", "DRUGFC") | final_call_type %in% c("DRUG", "DRUGFC"))
View(ems.drugs)
unique(ems.drugs$reopen_indicator)
table(ems.drugs$reopen_indicator)
lubridate::year(ems$incident_datetime)
ems <- read.csv("data/ems_original.csv")
ems <- ems[-1]
# CLEANING
str(ems)
#change borough to SI
ems$borough <- as.character(ems$borough)
ems$borough <- "SI"
# ems add a year column, based off incident year
ems$year <- lubridate::year(ems$incident_datetime)
#see if incident id is completely unique
length(unique(ems$cad_incident_id)) == nrow(ems) # each incident is truly unique
#clean datetime variables - remove characters and convert to date,hms
# create function
cleandt <- function(x){
x <- stringr::str_replace_all(string = x, pattern = 'T', replacement = " ")
x <- lubridate::ymd_hms(x)
return(x)
}
# apply to columns ending with date time
ems <- ems %>%
mutate_at(vars(ends_with("datetime")), list(cleandt))
#check incident range
range(ems$incident_datetime) #we have from Jan 1, 2013 to Dec 31, 2018 (# 4 years of data)
# initial call type / final call type (these are subjective - based on the caller, we should note that
#final call type does not change based on ambulance crew (always based on the caller))
unique(ems$initial_call_type)
unique(ems$final_call_type)
# initial/ final severity level code
unique(ems$initial_severity_level_code)
unique(ems$final_severity_level_code)
# VALID_DISPATCH_RSPNS_TIME_INDC / DISPATCH_RESPONSE_SECONDS_QY
unique(ems$valid_dispatch_rspns_time_indc)
str(ems$dispatch_response_seconds_qy)
# VALID_INCIDENT_RSPNS_TIME_INDC / INCIDENT_RESPONSE_SECONDS_QY
unique(ems$valid_incident_rspns_time_indc)
str(ems$incident_response_seconds_qy)
# INCIDENT_TRAVEL_TM_SECONDS_QY
str(ems$incident_travel_tm_seconds_qy)
# HELD_INDICATOR
str(ems$held_indicator)
# INCIDENT_DISPOSITION_CODE
# 82	transporting patient
# 83	patient pronounced dead
# 87	cancelled
# 90	unfounded
# 91	condition corrected
# 92	treated not transported
# 93	refused medical aid
# 94	treated and transported
# 95	triaged at scene no transport
# 96	patient gone on arrival
# CANCEL	cancelled
# DUP	duplicate incident
# NOTSNT	unit not sent
# ZZZZZZ	no disposition
unique(ems$incident_disposition_code)
ems <- filter(ems, ems$incident_disposition_code != 87) # filter out cancelled EMS dispatches
# atom
unique(ems$atom)
table(ems$atom)
# incident dispatch area / police precints
unique(ems$incident_dispatch_area)
table(ems$incident_dispatch_area) # it appears that some incident dispatch areas are outside SI, if I am assessing
# this properly
# found good webiste that breaks it down to precincts / fire battalions
# S1 - links to 120 precinct
# S2 - links to 122 precinct
# S3 - links to 123 precinct
table(ems$incident_dispatch_area) # some fall out of SI we should filter these out
table(ems$policeprecinct) # some fall out
ems <- filter(ems, incident_dispatch_area %in% c("S1", "S2", "S3")) #filter only on SI dispatch area
ems <- filter(ems, policeprecinct %in% c(120,121,122,123)) #filter only on SI police precincts
# CALL TYPE DESCRIPTIONS
# DRUG - DRUG ALCOHOL ABUSE
# DRUGFC - DRUG ALCOHOL ABUSE, FEVER + COUGH
ems.drugs <- filter(ems, initial_call_type %in% c("DRUG", "DRUGFC") | final_call_type %in% c("DRUG", "DRUGFC"))
View(ems.drugs)
# one last thing check initial call type versus final call type
ems.drugs %>%
select(initial_call_type, final_call_type) %>%
head()
# one last thing check initial call type versus final call type
chk <- ems.drugs %>%
select(initial_call_type, final_call_type)
View(chk)
sum(chk$initial_call_type == chk$final_call_type)
chk$initial_call_type == chk$final_call_type
str(chk$initial_call_type)
chk <- as.character(chk$initial_call_type)
# one last thing check initial call type versus final call type
chk <- ems.drugs %>%
select(initial_call_type, final_call_type)
chk <- as.character(chk$final_call_type)
chk <- ems.drugs %>%
select(initial_call_type, final_call_type)
chk$initial_call_type <- as.character(chk$initial_call_type)
chk <- ems.drugs %>%
select(initial_call_type, final_call_type)
chk$initial_call_type <- as.character(chk$initial_call_type)
chk$final_call_type <- as.character(chk$final_call_type)
View(chk)
chk$initial_call_type == chk$final_call_type
sum(chk$initial_call_type == chk$final_call_type)
chk %>%
mutate(indic = case_when(
initial_call_type == final_call_type ~ "No Drop",
!initial_call_type %in% c("DRUG", "DRUGFC") & final_call_type %in% c("DRUG", "DRUGFC") ~ "No Drop",
initial_call_type  %in% c("DRUG", "DRUGFC") & !final_call_type %in% c("DRUG", "DRUGFC") ~ "Drop"
))
chk <- chk %>%
mutate(indic = case_when(
initial_call_type == final_call_type ~ "No Drop",
!initial_call_type %in% c("DRUG", "DRUGFC") & final_call_type %in% c("DRUG", "DRUGFC") ~ "No Drop",
initial_call_type  %in% c("DRUG", "DRUGFC") & !final_call_type %in% c("DRUG", "DRUGFC") ~ "Drop"
))
View(chk)
str(ems.drugs)
# one last thing check initial call type versus final call type, I will create indicator variable decide on
# if we drop them later
ems.drugs <- ems.drugs %>%
select(initial_call_type, final_call_type) %>%
mutate(initial_call_type = as.character(initial_call_type)) %>%
mutate(final_call_type = as.character(final_call_type)) %>%
mutate(indic = case_when(
initial_call_type == final_call_type ~ "No Drop",
!initial_call_type %in% c("DRUG", "DRUGFC") & final_call_type %in% c("DRUG", "DRUGFC") ~ "No Drop",
initial_call_type  %in% c("DRUG", "DRUGFC") & !final_call_type %in% c("DRUG", "DRUGFC") ~ "Drop"
))
View(ems.drugs)
# upload
ems <- read.csv("data/ems_original.csv")
ems <- ems[-1]
# CLEANING
str(ems)
#change borough to SI
ems$borough <- as.character(ems$borough)
ems$borough <- "SI"
# ems add a year column, based off incident year
ems$year <- lubridate::year(ems$incident_datetime)
#see if incident id is completely unique
length(unique(ems$cad_incident_id)) == nrow(ems) # each incident is truly unique
#clean datetime variables - remove characters and convert to date,hms
# create function
cleandt <- function(x){
x <- stringr::str_replace_all(string = x, pattern = 'T', replacement = " ")
x <- lubridate::ymd_hms(x)
return(x)
}
# apply to columns ending with date time
ems <- ems %>%
mutate_at(vars(ends_with("datetime")), list(cleandt))
#check incident range
range(ems$incident_datetime) #we have from Jan 1, 2013 to Dec 31, 2018 (# 4 years of data)
# initial call type / final call type (these are subjective - based on the caller, we should note that
#final call type does not change based on ambulance crew (always based on the caller))
unique(ems$initial_call_type)
unique(ems$final_call_type)
# initial/ final severity level code
unique(ems$initial_severity_level_code)
unique(ems$final_severity_level_code)
# VALID_DISPATCH_RSPNS_TIME_INDC / DISPATCH_RESPONSE_SECONDS_QY
unique(ems$valid_dispatch_rspns_time_indc)
str(ems$dispatch_response_seconds_qy)
# VALID_INCIDENT_RSPNS_TIME_INDC / INCIDENT_RESPONSE_SECONDS_QY
unique(ems$valid_incident_rspns_time_indc)
str(ems$incident_response_seconds_qy)
# INCIDENT_TRAVEL_TM_SECONDS_QY
str(ems$incident_travel_tm_seconds_qy)
# HELD_INDICATOR
str(ems$held_indicator)
# INCIDENT_DISPOSITION_CODE
# 82	transporting patient
# 83	patient pronounced dead
# 87	cancelled
# 90	unfounded
# 91	condition corrected
# 92	treated not transported
# 93	refused medical aid
# 94	treated and transported
# 95	triaged at scene no transport
# 96	patient gone on arrival
# CANCEL	cancelled
# DUP	duplicate incident
# NOTSNT	unit not sent
# ZZZZZZ	no disposition
unique(ems$incident_disposition_code)
ems <- filter(ems, ems$incident_disposition_code != 87) # filter out cancelled EMS dispatches
# atom
unique(ems$atom)
table(ems$atom)
# incident dispatch area / police precints
unique(ems$incident_dispatch_area)
table(ems$incident_dispatch_area) # it appears that some incident dispatch areas are outside SI, if I am assessing
# this properly
# found good webiste that breaks it down to precincts / fire battalions
# S1 - links to 120 precinct
# S2 - links to 122 precinct
# S3 - links to 123 precinct
table(ems$incident_dispatch_area) # some fall out of SI we should filter these out
table(ems$policeprecinct) # some fall out
ems <- filter(ems, incident_dispatch_area %in% c("S1", "S2", "S3")) #filter only on SI dispatch area
ems <- filter(ems, policeprecinct %in% c(120,121,122,123)) #filter only on SI police precincts
# CALL TYPE DESCRIPTIONS
# DRUG - DRUG ALCOHOL ABUSE
# DRUGFC - DRUG ALCOHOL ABUSE, FEVER + COUGH
ems.drugs <- filter(ems, initial_call_type %in% c("DRUG", "DRUGFC") | final_call_type %in% c("DRUG", "DRUGFC"))
# one last thing check initial call type versus final call type, I will create indicator variable decide on
# if we drop them later
ems.drugs <- ems.drugs %>%
mutate(initial_call_type = as.character(initial_call_type)) %>%
mutate(final_call_type = as.character(final_call_type)) %>%
mutate(indic = case_when(
initial_call_type == final_call_type ~ "No Drop",
!initial_call_type %in% c("DRUG", "DRUGFC") & final_call_type %in% c("DRUG", "DRUGFC") ~ "No Drop",
initial_call_type  %in% c("DRUG", "DRUGFC") & !final_call_type %in% c("DRUG", "DRUGFC") ~ "Drop"
))
rm(chk)
View(ems.drugs)
?write_csv
getwd()
write_csv(ems.drugs, path = "data", "emsdrugs.csv")
write_csv(ems.drugs, path = "data/", "emsdrugs.csv")
write_csv(ems.drugs, "emsdrugs.csv")
getwd()
rm(list=ls())
rm(Olist=ls())
rm(list=ls())
rm(list=ls())
getwd(0)
getwd()
ems <- read.csv("data/emsdrugs.csv")
library(plyr)
library(tidyverse)
library(ggplot2)
names(Ems)
names(ems)
ems %>%
group_by(policeprecinct) %>%
summarise(n=n())
ems %>%
group_by(policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x=policeprecinct, y = n)) +
geom_bar(stat = 'identity') +
ggtitle("EMS calls w. Initial or Final Call Type Related to Drugs")
ems %>%
group_by(policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x=policeprecinct, y = n)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle("EMS calls w. Initial or Final Call Type Related to Drugs")
ems %>%
group_by(year) %>%
summarise(n=n())
ems %>%
group_by(year) %>%
summarise(n=n()) %>%
ggplot(aes(x=year, y=n)) +
geom_line() +
ggtitle("EMS calls Related to Drugs by Year")
ems %>%
group_by(year, policeprecinct) %>%
summarise(n=n())
ems %>%
group_by(year, policeprecinct) %>%
summarise(n=n()) +
ggplot(aes(x = policeprecinct, y = n)) +
geom_line()+
facet_wrap(vars(policeprecinct))
ems %>%
group_by(year, policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x = policeprecinct, y = n)) +
geom_line()+
facet_wrap(vars(policeprecinct))
ems %>%
group_by(year, policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x = year, y = n)) +
geom_line()+
facet_wrap(vars(policeprecinct))
ems$communitydistrict
str(ems$communitydistrict)
unique(ems$communitydistrict)
unique(ems$citycouncildistrict)
unique(ems$communityschooldistrict)
unique(ems$congressionaldistrict)
unique(ems$final_severity_level_code)
unique(ems$initial_call_type)
unique(ems$initial_severity_level_code)
unique(ems$zipcode)
ems %>%
group_by(zipcode) %>%
summarise(n=n())
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n))
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
ggplot(aes(x=zipcode, y=n)) +
geom_bar(stat='identity') +
ggtitle('EMS Calls Related to Drugs by Zipcode')
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
ggplot(aes(x=factor(zipcode), y=n)) +
geom_bar(stat='identity') +
ggtitle('EMS Calls Related to Drugs by Zipcode')
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
ggplot(aes(x=factor(zipcode), y=n)) +
geom_bar(stat='identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle('EMS Calls Related to Drugs by Zipcode')
## Analysis by year + zip
ems %>%
group_by(year, zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n))
## Analysis by year + zip
ems %>%
group_by(year, zipcode) %>%
summarise(n=n()) %>%
ggplot(aes(x = year, y = n)) +
geom_line()+
facet_wrap(vars(zipcode))
ems %>%
mutate(ShoreIndicator = case_when(
zipcode %in% c(10303, 10302, 10310) ~ "North Shore",
zipcode %in% c(10304, 10305, 10314) ~ "Border",
zipcode %in% c(10306, 10307,10308,10309, 10311, 10312, 10313, 10314) ~ "South Shore",
zipcode == 10301 ~ 'Mostly North'
))
ems <- ems %>%
mutate(ShoreIndicator = case_when(
zipcode %in% c(10303, 10302, 10310) ~ "North Shore",
zipcode %in% c(10304, 10305, 10314) ~ "Border",
zipcode %in% c(10306, 10307,10308,10309, 10311, 10312, 10313, 10314) ~ "South Shore",
zipcode == 10301 ~ 'Mostly North'
))
ems %>%
group_by(ShoreIndicator) %>%
summarise(n=n())
ems %>%
group_by(ShoreIndicator) %>%
summarise(n=n()) %>%
ggplot(aes(x=ShoreIndicator, y = n)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle("EMS Calls Related to Drugs by Shore")
demo <- read.csv("data/DemoByZip.csv")
names(ems)
names(demo)
names(demo)[1]
names(demo)[1] <- 'zipcode'
ems_demo <- left_join(ems, demo, by = 'zipcode')
ems_demo %>%
distinct(zipcode, PERCENT.WHITE.NON.HISPANIC)
ems_demo %>%
distinct(zipcode, COUNT.WHITE.NON.HISPANIC)
View(ems_demo)
ems_demo %>%
distinct(zipcode, PERCENT.HISPANIC.LATINO)
rm(list=ls()
rm(list=ls()
rm(list=ls())
#### Exploratory Data Analysis of calls made to EMS (filtered for Drugs + for SI )
library(plyr)
library(tidyverse)
library(ggplot2)
## read in data
ems <- read.csv("data/emsdrugs.csv")
## By year
ems %>%
group_by(year) %>%
summarise(n=n()) %>%
ggplot(aes(x=year, y=n)) +
geom_line() +
ggtitle("EMS calls Related to Drugs by Year")
## Which precinct is most prominent ?
ems %>%
group_by(policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x=policeprecinct, y = n)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle("EMS calls w. Initial or Final Call Type Related to Drugs")
## EMS calls by precinct and by year
ems %>%
group_by(year, policeprecinct) %>%
summarise(n=n()) %>%
ggplot(aes(x = year, y = n)) +
geom_line()+
facet_wrap(vars(policeprecinct))
## FROM WIKIPEDIA AND I KIND OF AGREE WITH IT
##Generally, the North Shore is deemed to include the communities located within ZIP codes 10303, 10302 and 10310 in their
## entirety, along with all of the area covered by 10301 except Sunnyside, and those parts of
## 10304, 10305, 10314 that lie north of the Staten Island Expressway.
## This definition includes Mariners Harbor, Port Richmond, Westerleigh, Meiers Corners, Graniteville, Castleton Corners,
## West Brighton, New Brighton, St. George, Tompkinsville, Stapleton, Grymes Hill, Park Hill, Clifton, and Rosebank
## among the North Shore's neighborhoods.
## The Staten Island Expressway is considered by many to be a southern border.
## Analysis by zipcode
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
ggplot(aes(x=factor(zipcode), y=n)) +
geom_bar(stat='identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle('EMS Calls Related to Drugs by Zipcode')
## Analysis by year + zip
ems %>%
group_by(year, zipcode) %>%
summarise(n=n()) %>%
ggplot(aes(x = year, y = n)) +
geom_line()+
facet_wrap(vars(zipcode))
## I will now label zipcodes by being on North Shore, South Shore, or Border (between North + South)
ems <- ems %>%
mutate(ShoreIndicator = case_when(
zipcode %in% c(10303, 10302, 10310) ~ "North Shore",
zipcode %in% c(10304, 10305, 10314) ~ "Border",
zipcode %in% c(10306, 10307,10308,10309, 10311, 10312, 10313, 10314) ~ "South Shore",
zipcode == 10301 ~ 'Mostly North'
))
## Crimes by Label
ems %>%
group_by(ShoreIndicator) %>%
summarise(n=n()) %>%
ggplot(aes(x=ShoreIndicator, y = n)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = n), position = position_dodge(width = 0.9)) +
ggtitle("EMS Calls Related to Drugs by Shore")
#10301 - should consider that the 10301 zipcode contains the St. George Terminal
## Zipcode analysis with demographics
demo <- read.csv("data/DemoByZipACS2017.csv")
names(demo)
View(demo)
names(demo)[2]
names(demo)[2] <- "zipcode"
ems_demo <- left_join(ems, demo, by = 'zipcode')
ems_demo %>%
select(zipcode, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(percentWhite = Estimate..Total....White.alone/Estimate..Total.)
ems_demo %>%
select(zipcode, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(percentWhite = (Estimate..Total....White.alone/Estimate..Total.)*100)
ems_demo %>%
select(zipcode, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(percentWhite = (Estimate..Total....White.alone/Estimate..Total.)*100) %>%
distinct(zipcode, percentWhite)
zipWhite<-ems_demo %>%
select(zipcode, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(percentWhite = (Estimate..Total....White.alone/Estimate..Total.)*100) %>%
distinct(zipcode, percentWhite)
ems %>%
group_by(zipcode) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
left_join(zipWhite)
