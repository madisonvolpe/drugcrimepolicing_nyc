as.data.frame(intresult)[,-3]
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3]
View(final_arrest_counts_by_zip)
colSums(zip$n)
2583 + 1390 + 1200 + 2108 + 1104 + 1035 + 335 + 346 + 909 + 867 + 1094 + 1687
14667 - 14658
## get ems counts
emsorig   <- read.csv("data/emis_original.csv")
## get ems counts
emsorig   <- read.csv("data/ems_original.csv")
names(emisorig)
names(emsorig)
emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
unique(emisorig$zipcode)
length(unique(emisorig$zipcode))
! length(unique(emisorig$zipcode)) %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
!length(unique(emisorig$zipcode)) %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
!length(unique(emisorig$zipcode)) %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313)
!unique(emisorig$zipcode) %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313)
!c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
unique(emisorig$zipcode)
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$x_coord_cd,  y = drugs$y_coord_cd, id = 1:nrow(points))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (9) but that is okay
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$x_coord_cd,  y = drugs$y_coord_cd, id = 1:nrow(points))
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$x_coord_cd,  y = drugs$y_coord_cd, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (9) but that is okay
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$x_coord_cd,  y = drugs$y_coord_cd, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
View(points)
View(zip)
View(zip)
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
View(points)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
14667 - 14663
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
View(intresult)
View(final_arrest_counts_by_zip)
range(drugs$year)
ems <- read.csv("data/emsdrugs.csv")
range(ems$year)
ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)
names(final_arrest_counts_by_zip)
names(final_ems_counts_by_zip)[1] <- 'zip'
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
str(final_ems_counts_by_zip)
str(final_arrest_counts_by_zip)
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
View(zip_model_dataset)
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
names(final_arrest_counts_by_zip)[2] <- 'no.drug.arrests.13.18'
#also note no arrests were made in 10311, 10313 - this is bc these areas are not very populated
## get ems counts
# emsorig   <- read.csv("data/ems_original.csv")
#
# emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#                   10312, 10301, 10304, 10305, 10314, 10311, 10313))
#
# !c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#    10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
View(zip_model_dataset)
demo <- read.csv("DemoByZipACS2017.csv")
demo <- read.csv("data/DemoByZipACS2017.csv")
View(demo)
filter(demo, Id2 %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demo <- filter(demo, Id2 %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demofinal <- demo %>%
select(zipcode, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(zipcode, percentWhite, percentnonWhite)
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(zipcode, percentWhite, percentnonWhite)
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(Id2, percentWhite, percentnonWhite)
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(Id2, proportionWhite, proportionNonWhite)
View(demofinal)
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(Id2, proportionWhite, proportionNonWhite) %>%
filter(Id2 != 10311)
names(demofinal)[1] <- 'zip'
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(Id2, Estimate..Total.,proportionWhite, proportionNonWhite) %>%
filter(Id2 != 10311)
names(demofinal)[1] <- 'zip'
# join demographics with data
zip_model_dataset <- left_join(zip_model_dataset, demofinal, by = 'zip')
View(zip_model_dataset)
rm(list=ls())
## We need the following datasets:
## drug arrest
## zip shapefile
## ems calls
## demo by zip
library(plyr)
library(tidyverse)
library(ggplot2)
library(sf)
library(maptools)
library(rgdal)
library(rgeos)
library(reshape2)
# First we will get the count of the number of drug arrests that occured in each zipcode
# read in drug arrests
drugs <- read.csv("data/si_drugs_mod_arrests.csv")
# read in zip shapefile
zip   <-readOGR(dsn = "shapefiles/ZipCode")
# convert zip to sf
zip <- st_as_sf(zip)
zip <- zip[,c(1,4)]
# filter for SI zip codes only
zip <- filter(zip, zcta %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
colnames(zip) <- c("zip", "geometry")
# transfom zip to 4326
zip <- st_transform(zip, 4326)
# get points from drugs dataset
points <- data.frame(x = drugs$longitude,  y = drugs$latitude, id = 1:nrow(drugs))
points <- st_as_sf(points, coords = c("x", "y"), crs = 4326)
# Intersection between polygon and points -
intersection <- st_intersection(x = zip, y = points)
# Counts
intresult <- intersection %>%
group_by(zip) %>%
count() %>%
select(zip,n)
final_arrest_counts_by_zip <- as.data.frame(intresult)[,-3] # lost some observations (4) but that is okay
final_arrest_counts_by_zip$zip <- as.numeric(as.character(final_arrest_counts_by_zip$zip))
names(final_arrest_counts_by_zip)[2] <- 'no.drug.arrests.13.18'
#also note no arrests were made in 10311, 10313 - this is bc these areas are not very populated
## get ems counts
# emsorig   <- read.csv("data/ems_original.csv")
#
# emisorig <- filter(emsorig, zipcode %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#                   10312, 10301, 10304, 10305, 10314, 10311, 10313))
#
# !c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
#    10312, 10301, 10304, 10305, 10314, 10311, 10313) %in% unique(emisorig$zipcode)
ems <- read.csv("data/emsdrugs.csv")
final_ems_counts_by_zip <- ems %>%
group_by(zipcode) %>%
count() %>%
select(zipcode,n)
names(final_ems_counts_by_zip)[1] <- 'zip'
names(final_ems_counts_by_zip)[2] <- 'no.ems.calls.13.18'
# join arrests and ems counts
zip_model_dataset <- left_join(final_arrest_counts_by_zip, final_ems_counts_by_zip, by = 'zip')
# add demographics
demo <- read.csv("data/DemoByZipACS2017.csv")
demo <- filter(demo, Id2 %in% c(10302, 10303, 10310, 10306, 10307, 10308, 10309,
10312, 10301, 10304, 10305, 10314, 10311, 10313))
demofinal <- demo %>%
select(Id2, Estimate..Total., Estimate..Total....White.alone) %>%
mutate(proportionWhite = (Estimate..Total....White.alone/Estimate..Total.),
proportionNonWhite = ((Estimate..Total.-Estimate..Total....White.alone)/
Estimate..Total.))%>%
select(Id2, Estimate..Total.,proportionWhite, proportionNonWhite) %>%
filter(Id2 != 10311)
names(demofinal)[1] <- 'zip'
# join demographics with data
zip_model_dataset <- left_join(zip_model_dataset, demofinal, by = 'zip')
write_csv(zip_model_dataset, "zipcodeModel1.csv")
rm(list=ls())
library(soql)
library(jsonlite)
library(tidyverse)
library(RSocrata)
# 311 Service Requests
# FROM: https://data.cityofnewyork.us/resource/fhrw-4uyv.json
# API CALL
# soql query to only get Staten Island entries
surl <- soql() %>%
soql_add_endpoint('https://data.cityofnewyork.us/resource/fhrw-4uyv.json') %>%
soql_simple_filter("borough", "STATEN ISLAND") %>%
soql_limit(1006806)%>% # I figure out using soql that the number of rows in dataset pertaining to SI was 1006806
#soql_offset(1000) %>%
as.character()
# API token
token <- "kQZdHWZoaGCuyRTdOGcpm9hqs"
# Add API Token to URL
url <-validateUrl(url = surl, app_token = token)
# FROM API get data, converts to df
x_311 <-fromJSON(url)
unique(x_311$complaint_type)
x <-unique(x_311$complaint_type)
x <- data.frame(unique(x_311$complaint_type))
View(x)
names(x_311_drugs)
names(x_311)
x_311_drugs <- filter(x_311_drugs,complaint_type == 'Drug Activity')
x_311_drugs <- filter(x_311,complaint_type == 'Drug Activity')
rm(x)
View(x_311_drugs)
names(x_311_drugs)
unique(agency)
unique(x_311_drugs$agency)
# descriptor
unique(x_311_drugs$descriptor)
table(x_311_drugs$descriptor)
x_311_drugs <- x_311_drugs[,-35:42]
x_311_drugs <- x_311_drugs[,-c(35:42)]
View(x_311_drugs)
cleandt <- function(x){
x <- stringr::str_replace_all(string = x, pattern = 'T', replacement = " ")
x <- lubridate::ymd_hms(x)
return(x)
}
cleandt(x_311_drugs$created_date)
x_311_drugs$created_date <- cleandt(x_311_drugs$created_date)
x_311_drugs$closed_date  <- cleandt(x_311_drugs$closed_date)
x_311_drugs$createdYear <- lubridate::year(x_311_drugs$created_date)
x_311_drugs$closed_date <- lubridate::year(x_311_drugs$closed_date)
x_311_drugs <- filter(x_311,complaint_type == 'Drug Activity')
x_311_drugs <- x_311_drugs[,-c(35:42)]
cleandt <- function(x){
x <- stringr::str_replace_all(string = x, pattern = 'T', replacement = " ")
x <- lubridate::ymd_hms(x)
return(x)
}
x_311_drugs$created_date <- cleandt(x_311_drugs$created_date)
x_311_drugs$closed_date  <- cleandt(x_311_drugs$closed_date)
x_311_drugs$createdYear <- lubridate::year(x_311_drugs$created_date)
x_311_drugs$closedYear <- lubridate::year(x_311_drugs$closed_date)
x_311_drugs$createdYear == x_311_drugs$closedYear
sum(x_311_drugs$createdYear == x_311_drugs$closedYear)
sum(x_311_drugs$createdYear == x_311_drugs$closedYear) == nrow(x_311_drugs)
# add in shore indicator
x_311_drugs <- x_311_drugs %>%
mutate(ShoreIndicator = case_when(
zipcode %in% c(10303, 10302, 10310) ~ "North Shore",
zipcode %in% c(10304, 10305, 10314) ~ "Border",
zipcode %in% c(10306, 10307,10308,10309, 10311, 10312, 10313, 10314) ~ "South Shore",
zipcode == 10301 ~ 'Mostly North'
))
names(x_311_drugs)
# add in shore indicator
x_311_drugs <- x_311_drugs %>%
mutate(ShoreIndicator = case_when(
incident_zip %in% c(10303, 10302, 10310) ~ "North Shore",
incident_zip %in% c(10304, 10305, 10314) ~ "Border",
incident_zip %in% c(10306, 10307,10308,10309, 10311, 10312, 10313, 10314) ~ "South Shore",
incident_zip == 10301 ~ 'Mostly North'
))
x_311_drugs %>%
group_by(ShoreIndicator) %>%
count(descriptor)
x_311_drugs %>%
group_by(incident_zip) %>%
summarise(n=n())
# by shore
x_311_drugs %>%
group_by(ShoreIndicator) %>%
summarise(n=n())
